@page "/workers"

@using WorkerPayManager.Data
@using WorkerPayManager.Models.Workers

@inject WorkerPayManager.Data.WorkerService workerService

@attribute [Authorize]

<h3>Workers</h3>

<AddWorker DataChanged="UpdateWorkers" />

<a class="nav-link" href="" data-toggle="modal" data-target="#addWorkerModal">
    <span class="oi oi-plus" aria-hidden="true"></span> Add A Worker
</a>



<WorkerPayManager.Pages.Templates.DataTableTemplate Items="_workers" TableClass="table" HeaderClass="thead-dark" UseRowCount="true" PropertiesList="_propertiesList">
    <RowTemplate>
        <td>@context.FirstName</td>
        <td>@context.LastName</td>
        <td>@context.IdentificationNumber</td>
        <td>@context.DateOfBirth.ToString("dd/MM/yyyy")</td>
        <td>@context.CreationDate.ToString("dd/MM/yyyy hh:mm:ss")</td>
        <td>
            <div class="btn-group">
                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Action
                </button>
                <div class="dropdown-menu">
                    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editCustomWorkerFieldModal">Edit</a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item text-danger" href="#" data-toggle="modal" data-target="#deleteCustomWorkerFieldModal">Remove</a>
                </div>
            </div>
        </td>
    </RowTemplate>
</WorkerPayManager.Pages.Templates.DataTableTemplate>


@code {
    private List<(Func<dynamic, IComparable>, string)> _propertiesList { get; set; }

    private List<WorkerPayManager.Models.Workers.Worker> _workers { get; set; }

    protected override void OnInitialized()
    {

        UpdateWorkers();

        _propertiesList = new List<(Func<dynamic, IComparable>, string)>();
        _propertiesList.Add((x => x.FirstName, "First Name"));
        _propertiesList.Add((x => x.LastName, "Last Name"));
        _propertiesList.Add((x => x.IdentificationNumber, "Number"));
        _propertiesList.Add((x => x.DateOfBirth, "Date Of Birth"));
        _propertiesList.Add((x => x.CreationDate, "Date Created"));
        _propertiesList.Add((null, "Action"));
    }

    private async void UpdateWorkers()
    {
        _workers = await workerService.GetWorkersAsync();
        StateHasChanged();
    }

}
