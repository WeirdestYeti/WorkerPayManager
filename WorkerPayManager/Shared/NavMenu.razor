@using WorkerPayManager.Data

@inject WorkerPayManager.Data.GlobalVariable globalVariable

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Worker Pay Manager</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>
                @if (globalVariable.IsCompanySelected)
                {
                    @:Company: @globalVariable.SelectedCompanyName (@globalVariable.SelectedCompanyId)
                }
                else
                {
                    @:Copmany: Not Selected
                }
            </NavLink>
        </li>
        @if (globalVariable.IsCompanySelected)
        {
            // Show menus if company is selected 

            <li class="nav-item px-3">
                <NavLink class="nav-link" href="workers">
                    <span class="oi oi-plus" aria-hidden="true"></span> Workers
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>
            </li>
        }

    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        globalVariable.OnChange += OnNotify;
    }

    public async Task OnNotify()
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        globalVariable.OnChange -= OnNotify;
    }

}
